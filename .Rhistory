plot(iris2$Global_active_power, type="h")
plot(,iris2$Global_active_power, type="h")
plot(iris2$Global_active_power, type="h")
hist(iris2$Global_active_power)
?hist
hist(iris2$Global_active_power, col="red")
?hist
hist(iris2$Global_active_power, col="red", main="Global Active Power")
hist(iris2$Global_active_power, col="red", main="Global Active Power", ylab = "Global Active Power (kilowatts)")
hist(iris2$Global_active_power, col="red", main="Global Active Power", xlab = "Global Active Power (kilowatts)")
?dev.copy
source("plot1.R")
plot1()
source("plot1.R")
plot1()
source("plot1.R")
source("plot1.R")
plot1()
?lubridate
??lubridate
plot(iris2$DateTime, iris2$Global_active_power, type="l")
plot(iris2$DateTime, iris2$Global_active_power, type="l", main="", xlab="", ylab="Global Active Power (kilowatts)")
source("plot2.R")
plot2()
iris2$Global_active_power
source("plot2.R")
plot2()
plot(iris2$DateTime, iris2$Global_active_power, type="l", main="", xlab="", ylab="Global Active Power (kilowatts)")
dev.copy(png, "plot22.png")
source("plot2.R")
plot2()
with(iris2, plot(DateTime, Sub_metering_1, points="blue"))
with(iris2, plot(DateTime, Sub_metering_1, points="blue", type="l"))
with(iris2, plot(DateTime, Sub_metering_1, color="blue", type="l"))
plot(iris2$DateTime, iris2$Sub_metering_1, color="blue", type="l"))
plot(iris2$DateTime, iris2$Sub_metering_1, color="blue", type="l")
?plot
plot(iris2$DateTime, iris2$Sub_metering_1, colors="blue", type="l")
plot(iris2$DateTime, iris2$Sub_metering_1, col="blue", type="l")
plot(iris2$DateTime, iris2$Sub_metering_1, col="black", type="l")
with(iris2, plot(DateTime, Sub_metering_1, col="black", type="n"))
?subset
with(iris2, plot(DateTime, Sub_metering_2, col="blue", type="n"))
lines(iris2$Sub_metering_1, col="black")
with(iris2, plot(DateTime, Sub_metering_2, col="blue", type="l"))
lines(iris2$Sub_metering_1, col="black")
?lines
with(iris2, plot(DateTime, Sub_metering_2, col="red", type="l"))
with(iris2, plot(DateTime, Sub_metering_3, col="blue", type="l"))
with(iris2, {plot(DateTime, Sub_metering_3, col="blue", type="l"),)
with(iris2, {plot(DateTime, Sub_metering_3, col="blue", type="l"),plot(DateTime, Sub_metering_2, col="red", type="l"),plot(DateTime, Sub_metering_1, col="black", type="l")})
with(data, plot(DateTime, Sub_metering_1, type = "n", ylab=""))
with(iris2, plot(DateTime, Sub_metering_1, type = "n", ylab=""))
with(iris2, lines(DateTime, Sub_metering_1, col = "black"))
with(dataset, lines(DateTime, Sub_metering_2, col = "red"))
with(iris2, lines(DateTime, Sub_metering_2, col = "red"))
with(iris2, lines(DateTime, Sub_metering_3, col = "blue"))
with(iris2, plot(DateTime, Sub_metering_1, type = "n", ylab="", xlab="Energy sub metering"))
with(iris2, plot(DateTime, Sub_metering_1, type = "n", ylab="Energy sub metering"))
with(iris2, plot(DateTime, Sub_metering_1, type = "n", ylab="Energy sub metering", xlab=""))
with(iris2, lines(DateTime, Sub_metering_3, col = "blue"))
with(iris2, lines(DateTime, Sub_metering_2, col = "red"))
with(iris2, lines(DateTime, Sub_metering_1, col = "black"))
?legend
legend("topright", col=c("black", "red", "blue"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch="-")
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch="_")
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch="_", lwd=20)
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), pch="_", lwd=2)
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1)
source("plot3.R")
plot3()
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, border="white")
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, border="blue")
par(mfrow=c(2,2))
with(iris2, {})
with(iris2, {
plot(DateTime, Global_active_power, type="l"), plot(Voltage, DateTime), plot(DateTime, Sub_metering_1, type="n"), lines(DateTime, Sub_metering_1, col="black"), lines(DateTime, Sub_metering_2, col="red"), lines(DateTime, Sub_metering_3, col="blue"), legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1), plot(Global_reactive_power, DateTime)}
with(iris2, {
plot(DateTime, Global_active_power, type="l"), plot(Voltage, DateTime), plot(DateTime, Sub_metering_1, type="n"), lines(DateTime, Sub_metering_1, col="black"), lines(DateTime, Sub_metering_2, col="red"), lines(DateTime, Sub_metering_3, col="blue"), legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1), plot(Global_reactive_power, DateTime)})
with(iris2, {
plot(DateTime, Global_active_power, type="l") plot(Voltage, DateTime) plot(DateTime, Sub_metering_1, type="n") lines(DateTime, Sub_metering_1, col="black") lines(DateTime, Sub_metering_2, col="red") lines(DateTime, Sub_metering_3, col="blue") legend("topright", col=c("black", "red", "blue") legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1) plot(Global_reactive_power, DateTime)})
?par
with(iris2, plot(DateTime, Global_active_power, type="l"))
with(iris2, plot(DateTime, Voltage, type="l"))
with(iris2, plot(DateTime, Sub_metering_1, type = "n", ylab="Energy sub metering", xlab=""))
with(iris2, lines(DateTime, Sub_metering_3, col = "blue"))
with(iris2, lines(DateTime, Sub_metering_2, col = "red"))
with(iris2, lines(DateTime, Sub_metering_1, col = "black"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1)
with(iris2, plot(DateTime, Global_reactive_power, type="l"))
?legend
with(iris2, plot(DateTime, Global_active_power, type="l"))
with(iris2, plot(DateTime, Voltage, type="l"))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, bty="n", cex=0.5)
with(iris2, plot(DateTime, Sub_metering_1, type = "n", ylab="Energy sub metering", xlab=""))
legend("topright", col=c("black", "red", "blue"), legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lwd=1, bty="n", cex=0.5)
with(iris2, lines(DateTime, Sub_metering_1, col = "black"))
with(iris2, lines(DateTime, Sub_metering_3, col = "blue"))
with(iris2, lines(DateTime, Sub_metering_2, col = "red"))
with(iris2, plot(DateTime, Global_reactive_power, type="l"))
source("plot4.R")
plot4()
par
par()
library(nlme)
library(lattice)
xyplot(weight~Time | Diet, BodyWeight)
?splom
library(lattice)
?splom
?trellis.par.set
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip", "./exdata.zip")
unzip("./exdata.zip")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(SCC)
View(NEI)
NEI99 <- NEI[year == "1999"]
head(NEI)
NEI99 <- NEI.year == "1999"
NEI99 <- NEI$year == "1999"
NEI99 <- NEI[NEI99]
NEI99 <- NEI[,NEI99]
NEI99 <- NEI[NEI99,]
NEI02 <- NEI$year == "2002"
NEI02 <- NEI[NEI02,]
NEI$year
print(NEI$year)
summarize(NEI$year)
summarise(NEI$year)
?print
NEI05 <- NEI$year == "2005"
NEI05 <- NEI[NEI05,]
NEI08 <- NEI$year == "2008"
NEI08 <- NEI[NEI08,]
?groupby
?sum
emissions99 <- sum(NEI99$emissions)
emissions99
NEI99$emissions
View(NEI99)
emissions99 <- sum(NEI99$Emissions)
emissions02 <- sum(NEI02$Emissions)
emissions05 <- sum(NEI05$Emissions)
emissions08 <- sum(NEI08$Emissions)
plot(emissions99, emissions02, emissions05, emissions08)
plot(NEI$year, NEI$emissions)
png("plot2-1.png", width=1080, height=1080)
plot(NEI$year, NEI$emissions)
dev.off()
png("plot2-1.png", width=1080, height=1080)
plot(sum(NEI$emissions), NEI$year)
plot(sum(NEI$Emissions), NEI$year)
plot(NEI$Emissions, NEI$year)
dev.off()
NEI2 <- cbind(NEI99, NEI02, NEI05, NEI08)
NEI2 <- rbind(NEI99, NEI02, NEI05, NEI08)
png("plot2-1.png", width=1080, height=1080)
plot(NEI2$Emissions, NEI2$year)
?abline
model <- lm(Emissions ~ year, NEI2)
abline(model)
dev.off()
hist(NEI$Emissions, NEI$year)
remNA <- is.na(NEI$Emissions)
count(remNA)
sum(remNA)
remNA
?hist
hist(NEI$Emissions)
hist(log(NEI$Emissions))
png("plot2-1.png", width=1080, height=1080)
plot(log(NEI2$Emissions), NEI2$year)
model <- lm(log(Emissions) ~ year, NEI2)
model <- lm(Emissions ~ year, NEI2)
abline(model)
dev.off()
plot(c(emissions99, emissions02, emissions05, emissions08), c("1999", "2002","2005","2008"))
plot(c("1999", "2002","2005","2008"),c(emissions99, emissions02, emissions05, emissions08))
NEI <- transform(NEI, year=factor(year))
plot(sum(NEI$Emissions), NEI$year)
hist(log(NEI$Emissions))
?ddply
library("plyr")
plot1data <- ddply(NEI, c("Emissions", "year"), summarise, sum = sum(Emissions))
clear(NEI02)
NEI <- readRDS("summarySCC_PM25.rds")
NEI <- readRDS("summarySCC_PM25.rds")
library("plyr")
plot1data <- ddply(NEI, c("Emissions", "year"), summarise, sum = sum(Emissions))
View(plot1data)
plot1data <- ddply(NEI, c(year", "Emissions"), summarise, sum = sum(Emissions))
plot1data <- ddply(NEI, c("year", "Emissions"), summarise, sum = sum(Emissions))
head(plot1data)
plot1data <- ddply(NEI, year, summarise, sum = sum(Emissions))
plot1data <- ddply(NEI, "year", summarise, sum = sum(Emissions))
head(plot1data)
plot(plot1data$year, plot1data$sum)
transform(plot1data, year = as.factor(year))
plot(plot1data$year, plot1data$sum)
model <- lm(sum ~ year, plot1data)
abline(model)
plot(plot1data$year, log(plot1data$sum))
model <- lm(log(sum) ~ year, plot1data)
abline(model)
png("plot2-1.png", width=480, height=480)
plot1data <- transform(plot1data, year = as.factor(year))
plot(plot1data$year, log(plot1data$sum))
model <- lm(log(sum) ~ year, plot1data)
abline(model)
dev.off()
plot1data
plot1data$year
plot(plot1data$year, log(plot1data$sum))
model <- lm(log(sum) ~ year, plot1data)
abline(model)
model
plot(plot1data$year, logplot1data$sum)
plot(plot1data$year, plot1data$sum)
model <- lm(sum ~ year, plot1data)
abline(model)
model <- lm(year ~ sum, plot1data)
png("plot2-1.png", width=480, height=480)
plot(plot1data$year, log(plot1data$sum), xlab="Year", ylab="Sum of Emissions")
dev.off()
png("plot2-1.png", width=480, height=480)
plot(plot1data$year, log(plot1data$sum), xlab="Year", ylab="log(sum) of Emissions")
dev.off()
baltdata <- NEI[NEI$fips == "24510",]
head(baltdata)
plot2data <- ddply(baltdata, "year", summarise, sum = sum(Emissions))
plot2data
plot(plot2data$year, log(plot1data$sum), xlab="Year", ylab="log(sum) of Emissions")
plot(plot2data$year, log(plot2data$sum), xlab="Year", ylab="log(sum) of Emissions")
model <- lm(year ~ sum, plot2data)
abline(model)
model <- lm(year ~ log(sum), plot2data)
abline(model)
model
plot(plot2data$year, plot2data$sum, xlab="Year", ylab="Sum of Emissions")
model <- lm(year ~ sum, plot2data)
abline(model)
model
?lm
model <- lm(sum ~ year, plot2data)
abline(model)
png("plot2-2.png", width=480, height=480)
plot(plot2data$year, plot2data$sum, xlab="Year", ylab="Sum of Emissions", main="Baltimore City Emissions Data")
abline(model)
dev.off()
plot2data <- transform(plot2data, year = as.factor(year))
plot(plot2data$year, plot2data$sum, xlab="Year", ylab="Sum of Emissions", main="Baltimore City Emissions Data")
abline(model)
model <- lm(log(sum) ~ year, plot1data)
plot(plot1data$year, log(plot1data$sum), xlab="Year", ylab="log(sum) of Emissions")
abline(model)
model <- lm(log(sum) ~ year, plot2data)
abline(model)
model <- lm(sum ~ year, plot2data)
model <- lm(log(sum) ~ year, plot1data)
abline(model)
plot(plot1data$year, log(plot1data$sum), xlab="Year", ylab="log(sum) of Emissions")
abline(model)
plot(plot1data$year, plot1data$sum, xlab="Year", ylab="Sum of Emissions")
model <- lm(sum ~ year, plot1data)
abline(model)
model
plot1data
plot1data <- transform(plot1data, year = as.numeric(year))
model <- lm(sum ~ year, plot1data)
plot(plot1data$year, plot1data$sum, xlab="Year", ylab="Sum of Emissions")
abline(model)
plot1data
plot1data$year = c(1999,2002,2005,2008)
plot1data
model <- lm(sum ~ year, plot1data)
plot(plot1data$year, plot1data$sum, xlab="Year", ylab="Sum of Emissions")
abline(model)
plot1data <- transform(plot1data, year = as.factor(year))
plot(plot1data$year, plot1data$sum, xlab="Year", ylab="Sum of Emissions")
abline(model)
head(NEI)
SCC <- readRDS("Source_Classification_Code.rds")
head(SCC)
plot3data <- ddply(baltdata, c("year", "type"), summarise, sum=sum(Emissions))
plot3data
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(year, sum, data=plot3data)
qplot(year, sum, data=plot3data, color=type)
qplot(year, sum, data=plot3data, facets = .~type)
qplot(year, sum, data=plot3data, facets = .~type, geom=c("point", "smooth"), method="lm")
png("plot2-3.png", width=720, height=480)
qplot(year, sum, data=plot3data, facets = .~type, geom=c("point", "smooth"), method="lm")
dev.off()
?transform
SCCcoal <- grep("Coal", SCC$EI.Sector)
SCCcoal
SCCcoal <- SCC[SCCcoal]
SCCcoal <- SCC[SCCcoal,]
View(SCCcoal)
scr(NEI)
head(NEI)
plot4data <- ddply(NEI, c("year", "SCC"), summarise, sum=sum(Emissions))
head(plot4data)
NEIbySource <- plot4data
SCCcoal <- grep("Coal&Combustion", SCC$EI.Sector)
SCCcoal <- grep("Coal", SCC$EI.Sector)
SCCcoal <- SCC[SCCcoal,]
merge(plot4data, SCCcoal, "SCC")
plot4combine <- merge(plot4data, SCCcoal, "SCC")
head(plot4combine)
View(plot4combine)
plot4final <- ddply(plot4combine, "year", summarise, sum2=sum(sum))
plot4final
plot(plot4final$year, plot4final$sum2, xlab="Year", ylab="Sum of Emissions",
main="US Coal-Based Emissions")
model <- lm(sum2 ~ year, plot4final)
abline(model)
png("plot2-4.png", width=480, height=480)
plot(plot4final$year, plot4final$sum2, xlab="Year", ylab="Sum of Emissions",
main="US Coal-Based Emissions")
model <- lm(sum2 ~ year, plot4final)
abline(model)
dev.off()
SCCmotor <- grep("Motor", SCC$EI.Sector)
SCC$EI.Sector
unique(SCC$EI.Sector)
SCCmotor <- grep("On\\-Road", SCC$EI.Sector)
SCCmotor <- SCC[Sccmotor,]
SCCmotor <- SCC[SCCmotor,]
head(SCCmotor)
plot5data <- ddply(baltdata, c("year", "type"), summarise, sum=sum(Emissions))
plot5data
plot5combine <- merge(baltdata, SCCmotor, "SCC")
plot5combine
head(plot5combine)
plot5final <- ddply(plot5combine, "year", summarise, sum2=sum(sum))
plot5final <- ddply(plot5combine, "year", summarise, sum2=sum(sum))
head(plot5data)
plot5combine <- merge(plot5data, SCCmotor, "SCC")
plot5combine
head(plot5combine)
plot5final <- ddply(plot5combine, "year", summarise, sum=sum(Emissions))
plot5final
plot(plot4final$year, plot4final$sum2, xlab="Year", ylab="Sum of Emissions",
main="US Motor Vehicle-Based Emissions")
plot(plot5final$year, plot5final$sum2, xlab="Year", ylab="Sum of Emissions",
main="US Motor Vehicle-Based Emissions")
plot(plot5final$year, plot5final$sum, xlab="Year", ylab="Sum of Emissions",
main="US Motor Vehicle-Based Emissions")
plot(plot5final$year, plot5final$sum, xlab="Year", ylab="Sum of Emissions",
main="Baltimore Motor Vehicle-Based Emissions")
model <- lm(sum2 ~ year, plot5final)
model <- lm(sum ~ year, plot5final)
abline(model)
plot5data <- ddply(baltdata, c("year", "type"), summarise, sum=sum(Emissions))
head(plot5data)
plot5combine <- merge(baltdata, SCCmotor, "SCC")
plot5final <- ddply(plot5combine, "year", summarise, sum=sum(Emissions))
png("plot2-5.png", width=480, height=480)
plot(plot5final$year, plot5final$sum2, xlab="Year", ylab="Sum of Emissions",
main="Baltimore Motor Vehicle-Based Emissions")
model <- lm(sum ~ year, plot5final)
abline(model)
dev.off()
plot(plot5final$year, plot5final$sum2, xlab="Year", ylab="Sum of Emissions",
main="Baltimore Motor Vehicle-Based Emissions")
plot(plot5final$year, plot5final$sum, xlab="Year", ylab="Sum of Emissions",
main="Baltimore Motor Vehicle-Based Emissions")
png("plot2-5.png", width=480, height=480)
plot(plot5final$year, plot5final$sum, xlab="Year", ylab="Sum of Emissions",
main="Baltimore Motor Vehicle-Based Emissions")
model <- lm(sum ~ year, plot5final)
abline(model)
dev.off()
baltLAdata <- NEI[(NEI$fips == "24510" | NEI$fips == "06037"),]
head(baltLAdata)
LAdata <- NEI[NEI$fips == "06037",]
merge(baltLAdata, SCCmotor, "SCC")
baltLAmergedata <- merge(baltLAdata, SCCmotor, "SCC")
head(baltLAmergedata)
plot6data <- ddply(baltLAmergedata, c("year", "fips"), summarise, sum=sum(Emissions))
plot6data
qplot(year, sum, data=plot6data, facets = .~fips, geom=c("point", "smooth"), method="lm")
ggplot(plot6data, aes(year, fips))
g <- ggplot(plot6data, aes(year, fips))
g + geom_point()
g <- ggplot(plot6data, aes(year, sum))
g + geom_point()
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~fips)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~fips) + labs(x="Year", y="Motor-Vehicle Based Emissions")
plot6data[fips=="06037"] <- "Los Angeles"
plot6data[plot6data$fips=="06037"] <- "Los Angeles"
plot6data
if(plot6data$fips == "06037") plot6data$fips = "Los Angeles"
if(plot6data[fips] == "06037") plot6data[fips] = "Los Angeles"
revalue(plot6data$fips, c("06037"="Los Angeles County", "24510"="Baltimore City"))
plot6data
plot6data <- ddply(baltLAmergedata, c("year", "fips"), summarise, sum=sum(Emissions))
plot6data
str(plot6data)
mapvalues(plot6data$fips, from=c("06037","24510"), to=("Los Angeles County", "Baltimore City"))
mapvalues(plot6data$fips, from=c("06037","24510"), to=c("Los Angeles County", "Baltimore City"))
plot6data
plot6data <- mapvalues(plot6data$fips, from=c("06037","24510"), to=c("Los Angeles County", "Baltimore City"))
plot6data
plot6data <- ddply(baltLAmergedata, c("year", "fips"), summarise, sum=sum(Emissions))
plot6data$fips <- mapvalues(plot6data$fips, from=c("06037","24510"), to=c("Los Angeles County", "Baltimore City"))
plot6data
plot6scale <- scale(plot6data)
?mtcars
plot6data$sum[plot6data$fips="Los Angeles County"]
plot6data$sum[plot6data$fips=="Los Angeles County"]
plot6data$sum[plot6data$fips=="Los Angeles County", plot6data$year="1999"]
plot6data$sum[plot6data$fips=="Los Angeles County", plot6data$year=="1999"]
plot6data$sum[c(plot6data$fips=="Los Angeles County", plot6data$year=="1999")]
plot6data$sum[plot6data$fips=="Los Angeles County" & plot6data$year=="1999"]
plot6norm <- ddply(plot6data, "sum", transform, sum=sum/sum[year=="1999"])
plot6norm
plot6norm <- ddply(plot6data, "sum", transform, sum=sum/sum[year=="1999"& fips==fips])
plot6norm
plot6norm <- ddply(plot6data, "sum", transform, sum=sum/plot6data[year=="1999"& fips==fips])
plot6norm <- ddply(plot6data, "sum", transform, sum=sum/plot6data$sum[year=="1999"& fips==fips])
plot6norm
plot6norm <- ddply(plot6data, "sum", transform, sum=sum/plot6data$sum[year=="1999"])
plot6norm
?within
within(plot6data, {sum=sum/sum[year=="1999"]})
within(plot6data, {sum=sum/sum[year=="1999"]}) -> plot6norm
plot6data
g <- ggplot(plot6norm, aes(year, sum))
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~fips) + labs(x="Year", y="Motor-Vehicle Based Emissions")
ggplot(plot6norm, aes(year, sum)) + geom_point() + geom_smooth(method="lm") + facet_grid(.~fips) + labs(x="Year", y="Motor-Vehicle Based Emissions (% of 1999 value)")
png("plot2-6.png", width=960, height=480)
ggplot(plot6norm, aes(year, sum)) + geom_point() + geom_smooth(method="lm") + facet_grid(.~fips) + labs(x="Year", y="Motor-Vehicle Based Emissions (% of 1999 value)")
dev.off()
library("dplyr")
activity <- read.csv("./activity.csv")
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm=TRUE))
act3 <- ddply(activity, ~interval, transform, steps = impute.mean(steps))
library("plyr")
act3 <- ddply(activity, ~interval, transform, steps = impute.mean(steps))
act3 <- arrange(act3, date, interval)
act4 <- mutate(act3, dow = weekdays(as.POSIXlt(date)))
act4$dow <- mapvalues(act4$dow, from=c("Sunday", "Saturday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), to=c("weekend", "weekend", "weekday", "weekday", "weekday", "weekday", "weekday"))
act4$dow = as.factor(act4$dow)
plotdata <- ddply(act4, c("dow", "interval"), summarise, mean=mean(steps))
plotsub <- subset(plotdata, dow="weekend")
View(plotsub)
?subset
plotsub <- plotdata[dow="weekend"]
plotsub <- plotdata$dow="weekend"]
plotsub <- plotdata$dow="weekend"
plotsub <- plotdata$dow="weekend"
plotsub <- plotdata$dow=="weekend"
plotsub <- plotdata[plotdata$dow=="weekend"]
plotsub <- plotdata[plotdata$dow=="weekend",]
plotsubA <- plotdata[plotdata$dow=="weekday",]
View(plotsub)
library("ggplot2")
qplot(interval, mean, data=plotdata, facets = dow~., geom=c("point", "smooth"), method="lm")
qplot(interval, mean, data=plotdata, facets = dow~., geom=c("point", "smooth"))
qplot(interval, mean, data=plotdata, facets = dow~., geom="path"
)
act3A <- ddply(act3, "date", summarise, sum=sum(steps))
View(act3A)
hist(act3A$sum, main="Histogram of Sum of Steps Per Day", xlab="Steps Per Day", breaks=nlevels(act3$date))
mean(act3$sum)
mean(act3A$sum)
median(act3A$sum)
View(act3A)
View(activity)
mean(activity)
activityNA <- activity[is.na(activity$steps)]
activityNA <- activity[is.na(activity$steps),]
View(activityNA)
sum(unique(activityNA$date))
(unique(activityNA$date))
activityNA$date
setwd("GitHub//RepData1")
dir
setwd("RepData_PeerAssessment1/")
?knit2html
install.packages("knitr")
library(knitr)
?knit2html
knit2html("./assessment1.Rmd")
knit2html("./PA1_template.Rmd")
knit2html("./PA1_template.Rmd")
knit2html("./PA1_template.Rmd")
knit2html("./PA1_template.Rmd")
knit2html("./PA1_template.Rmd")
knit2html("test.Rmd")
knit2html("test.Rmd")
knit2html("test.Rmd")
knit2html("test.Rmd")
View(act1)
act1 <- ddply(activity, ~interval, sum = sum(steps, na.rm=TRUE))
View(act4)
View(act1)
act1 <- ddply(activity, ~interval, transform, sum = sum(steps, na.rm=TRUE))
knit2html("test.Rmd")
knit2html("./PA1_template.Rmd")
?countlevels
?numlevels
knit2html("./PA1_template.Rmd")
knit2html("./PA1_template.Rmd")
